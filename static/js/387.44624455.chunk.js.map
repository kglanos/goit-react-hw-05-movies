{"version":3,"file":"static/js/387.44624455.chunk.js","mappings":"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","sources":["Api/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/NotFound/NotFound.styled.js","components/NotFound/NotFound.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '38184382f7c1e49ee2a98f8aa87aa3f4';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrending = async () => {\n  const response = await axios.get('trending/all/day');\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const response = await axios.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getDetailsMovie = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const getCastMovie = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n};","import styled from 'styled-components';\n\nexport const StyledCastsList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const StyledCastsItem = styled.li`\n  width: 203px;\n  height: auto;\n  list-style-type: none;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n  padding: 0;\n  background-color: #fff;\n  border-radius: 4px;\n  overflow: hidden;\n`;\nexport const StyledCastsImg = styled.img`\n  background-position: center;\n  max-width: 220px;\n  height: 305px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.3),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;","import { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport {\n  StyledCastsList,\n  StyledCastsItem,\n  StyledCastsImg,\n} from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\nimport NotFound from 'components/NotFound/NotFound';\nimport { getCastMovie } from '../../Api/Api';\nconst { useEffect } = require('react');\n\nconst Cast = () => {\n  const [actors, setActors] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const defaultImg =\n    'https://freepngimg.com/convert-png/130200-x-letter-hq-image-free';\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getCast = async () => {\n      setIsLoading(true);\n      try {\n        const response = await getCastMovie(movieId);\n        setActors(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n  return (\n    <>\n      {error && <div>Try to reload the page</div>}\n      {isLoading && <Loader />}\n\n      <StyledCastsList>\n        {actors &&\n          actors.cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <StyledCastsItem key={id}>\n                <StyledCastsImg\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : defaultImg\n                  }\n                  alt={`${name}`}\n                />\n                <h4>{name}</h4>\n                <p>Character: {character}</p>\n              </StyledCastsItem>\n            );\n          })}\n      </StyledCastsList>\n      {(!actors || actors.cast.length <= 0) && <NotFound />}\n    </>\n  );\n};\nexport default Cast;","import styled from 'styled-components';\n\nexport const StyledNotFound = styled.p`\n  color: #3f51b5;\n  padding: 5px 15px;\n  border: none;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.8),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.5), 0px 2px 1px -1px rgba(0, 0, 0, 0.8);\n  border-radius: 2px;\n  font-weight: 500;\n`;","import { StyledNotFound } from './NotFound.styled';\n\nconst NotFound = () => {\n  return (\n    <StyledNotFound>\n      {' '}\n      Sorry, nothing found for your request ðŸ’€ðŸ‘€ðŸ‘»\n    </StyledNotFound>\n  );\n};\nexport default NotFound;"],"names":["axios","api_key","language","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_context2","concat","results","_x","getDetailsMovie","_ref3","_callee3","movieId","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4","StyledCastsList","styled","_templateObject","_taggedTemplateLiteral","StyledCastsItem","_templateObject2","StyledCastsImg","_templateObject3","useEffect","require","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useParams","getCast","t0","message","finish","_jsxs","_Fragment","children","_jsx","Loader","cast","map","id","profile_path","name","character","src","alt","length","NotFound","StyledNotFound"],"sourceRoot":""}
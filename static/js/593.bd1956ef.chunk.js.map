{"version":3,"file":"static/js/593.bd1956ef.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '38184382f7c1e49ee2a98f8aa87aa3f4';\n\nexport const getTrending = async () => {\n    const response = await axios.get(\n      `${BASE_URL}trending/all/day?api_key=${API_KEY}&language=en-US`\n    );\n    return await response.data;\n  };\n  \n  export const getSearchMovies = async query => {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n    );\n    return response.data.results;\n  };\n  export const getDetailsMovie = async movieId => {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  };\n  export const getCastMovie = async movieId => {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  };\n  \n  export const getReviewsMovie = async movieId => {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  };","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMovList = styled.div`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledUl = styled.ul`\nwidth: auto;\n  height: auto;\n  list-style-type: none;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n  padding: 0;\n  background-color: #fff;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  text-decoration: none;\n  color: grey;\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 15px; /* Adjust the margin as needed */\n\n  :hover {\n    color: tomato;\n  }\n`;\n\nexport const StyledImg = styled.img`\nmax-width: 220px;\nheight: 305px;\nbox-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.3),\n  0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const StyledTitle = styled.p`\n  margin: 0;\n`;","import { StyledMovList, StyledLink, StyledUl, StyledImg } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <StyledMovList>\n            <>\n                {movies.map(({ id, title, poster_path }) => (\n                <StyledUl key={id}>\n                    <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                    <StyledImg\n                        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                        alt={`Poster of ${title}`}\n                    />\n                    <p>{title}</p>\n                    </StyledLink>\n                </StyledUl>\n                ))}\n            </>\n        </StyledMovList>\n    );\n};\n\nexport default MoviesList;","import styled from 'styled-components';\nexport const StyledSearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  gap: 10px;\n  margin-bottom: 10px;\n`;\nexport const StyledInput = styled.input`\n  display: inline-block;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  border: none;\n  font: inherit;\n  padding: 6px 12px;\n`;\nexport const StyledBtn = styled.button`\n  padding: 4px 10px;\n  cursor: pointer;\n  outline: none;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  border: none;\n`;","import React from 'react';\nimport { TbSearch  } from 'react-icons/tb';\nimport { StyledSearchForm, StyledInput, StyledBtn } from './SearchForm.styled';\n\nconst SearchForm = ({ onFormSubmit }) => {\n  return (\n    <StyledSearchForm onSubmit={onFormSubmit}>\n      <StyledInput\n        name=\"searchKey\"\n        type=\"text\"\n        required\n        placeholder=\"Enter movies\"\n      />\n\n      <StyledBtn type=\"submit\">\n        <span>\n          {<TbSearch  size=\"20\" color=\"black\" />}\n        </span>\n      </StyledBtn>\n    </StyledSearchForm>\n  );\n};\nexport default SearchForm;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { getSearchMovies } from '../Api/Api';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryValue = searchParams.get('query');\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    const value = e.currentTarget.elements.searchKey.value;\n    setSearchParams({ query: value });\n    e.target.reset();\n  };\n\n  useEffect(() => {\n    if (!queryValue) return;\n    const getFilms = async () => {\n      setIsLoading(true);\n      try {\n        const response = await getSearchMovies(queryValue);\n        setSearchMovies(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getFilms();\n  }, [queryValue]);\n\n  return (\n    <div>\n      {error && <div>Try to reload the page</div>}\n      {isLoading && <Loader />}\n      <SearchForm onFormSubmit={onFormSubmit} />\n      {searchMovies !== null && <MoviesList movies={searchMovies} />}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["BASE_URL","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","abrupt","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_context2","results","_x","getDetailsMovie","_ref3","_callee3","movieId","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4","StyledMovList","styled","_templateObject","_taggedTemplateLiteral","StyledUl","_templateObject2","StyledLink","Link","_templateObject3","StyledImg","_templateObject4","_templateObject5","movies","location","useLocation","_jsx","children","_Fragment","map","id","title","poster_path","_jsxs","to","state","from","src","alt","StyledSearchForm","StyledInput","StyledBtn","onFormSubmit","onSubmit","name","type","required","placeholder","TbSearch","size","color","_useState","useState","_useState2","_slicedToArray","searchMovies","setSearchMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","queryValue","get","useEffect","getFilms","t0","message","finish","Loader","SearchForm","e","preventDefault","value","currentTarget","elements","searchKey","target","reset","MoviesList"],"sourceRoot":""}
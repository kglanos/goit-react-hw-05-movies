{"version":3,"file":"static/js/387.f11cee17.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/NotFound/NotFound.styled.js","components/NotFound/NotFound.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '38184382f7c1e49ee2a98f8aa87aa3f4';\n\nexport const getTrending = async () => {\n    const response = await axios.get(\n      `${BASE_URL}trending/all/day?api_key=${API_KEY}&language=en-US`\n    );\n    return await response.data;\n  };\n  \n  export const getSearchMovies = async query => {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n    );\n    return response.data.results;\n  };\n  export const getDetailsMovie = async movieId => {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  };\n  export const getCastMovie = async movieId => {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  };\n  \n  export const getReviewsMovie = async movieId => {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  };","import styled from 'styled-components';\n\nexport const StyledCastsList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const StyledCastsItem = styled.li`\n  /* width: calc((100% - 60px) / 4); */\n  min-height: 280px;\n  list-style-type: none;\n`;\nexport const StyledCastsImg = styled.img`\n  max-width: 220px;\n  height: 305px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.3),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;","import { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport {\n  StyledCastsList,\n  StyledCastsItem,\n  StyledCastsImg,\n} from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\nimport NotFound from 'components/NotFound/NotFound';\nimport { getCastMovie } from '../../Api/Api';\nconst { useEffect } = require('react');\n\nconst Cast = () => {\n  const [actors, setActors] = useState(null);\n  const [isloading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const defaultImg =\n    'https://media.istockphoto.com/id/1322220448/ru/%D1%84%D0%BE%D1%82%D0%BE/%D0%B0%D0%B1%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%82%D0%BD%D1%8B%D0%B9-%D1%86%D0%B8%D1%84%D1%80%D0%BE%D0%B2%D0%BE%D0%B9-%D1%84%D1%83%D1%82%D1%83%D1%80%D0%B8%D1%81%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D0%B3%D0%BB%D0%B0%D0%B7.jpg?s=612x612&w=0&k=20&c=QIyjOS5NLKacsYooP28QtmfgmM-RWP1o9wqIMfPS9og=';\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getCast = async () => {\n      setIsLoading(true);\n      try {\n        const response = await getCastMovie(movieId);\n        setActors(response);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n  return (\n    <>\n      {error && <div>Try to reload the page</div>}\n      {isloading && <Loader />}\n\n      <StyledCastsList>\n        {actors &&\n          actors.cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <StyledCastsItem key={id}>\n                <StyledCastsImg\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : defaultImg\n                  }\n                  alt={`${name}`}\n                />\n                <h4>{name}</h4>\n                <p>Character: {character}</p>\n              </StyledCastsItem>\n            );\n          })}\n      </StyledCastsList>\n      {(!actors || actors.cast.length <= 0) && <NotFound />}\n    </>\n  );\n};\nexport default Cast;","import styled from 'styled-components';\n\nexport const StyledNotFound = styled.p`\n  color: #3f51b5;\n  padding: 5px 15px;\n  border: none;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.8),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.5), 0px 2px 1px -1px rgba(0, 0, 0, 0.8);\n  border-radius: 2px;\n  font-weight: 500;\n`;","import { StyledNotFound } from './NotFound.styled';\nconst NotFound = () => {\n  return (\n    <StyledNotFound>\n      {' '}\n      Sorry, nothing found for your request ðŸ’€ðŸ‘€ðŸ‘»\n    </StyledNotFound>\n  );\n};\nexport default NotFound;"],"names":["BASE_URL","API_KEY","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","abrupt","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_context2","results","_x","getDetailsMovie","_ref3","_callee3","movieId","_context3","_x2","getCastMovie","_ref4","_callee4","_context4","_x3","getReviewsMovie","_ref5","_callee5","_context5","_x4","StyledCastsList","styled","_templateObject","_taggedTemplateLiteral","StyledCastsItem","_templateObject2","StyledCastsImg","_templateObject3","useEffect","require","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isloading","setIsLoading","_useState5","_useState6","error","setError","useParams","getCast","t0","message","finish","_jsxs","_Fragment","children","_jsx","Loader","cast","map","id","profile_path","name","character","src","alt","length","NotFound","StyledNotFound"],"sourceRoot":""}